{
  "hash": "3bfce1e2fc7d9a3593503de92fed4f03",
  "result": {
    "markdown": "---\ntitle: \"Descriptive tables using base R, data.table and tidyverse\"\nauthor: \"George Savva\"\ndate: \"22/02/2022\"\noutput:\n  html_document:\n    toc: yes\n    toc_depth: 2\n---\n\n\n# Limitations of \"base\" R\n\nWith only base R (that is, R without add on packages) it can be unexpectedly difficult to perform some simple tasks.\n\nA good example is making a table of summary statistics.  This is difficult with base R but is simple with using function from add-on packages. \n\nHere I illustrate this using two widely used systems for data manipulation in R, namely `data.table` and `tidyverse`.  Both can be used to make summary tables of descriptive statistics. that can be exported \n\nFinally I describe a package, `gtsummary` that is specifically designed for creation of publication ready summary tables.\n\n# Mean of one variable stratified by another\n\nSuppose we have a dataset of the heights (in cm) of 100 men and women, and we want to make a descriptive table of means, standard deviations and counts by sex.\n\nFirst let's make a fake dataset.  We'll assume women have an average height of 170cm, men of 180cm with both groups normally distributed with a standard deviation of 10.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Look up 'sample' to understand what this does\nsex = sample(c(\"Male\", \"Female\"), size=100, replace=TRUE)\n\n# What does this line do?\nheight = rnorm(n=100, \n               mean=180 + 10* (sex==\"Male\"), \n               sd=10)\n\n# We have two vectors of the same length so we can combine them into a data frame.\ndat = data.frame(height,sex)\n```\n:::\n\n\nNow lets quickly check the data using a plot to make sure it looks as we would expect.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    height    sex\n1 198.9760   Male\n2 190.3905   Male\n3 196.5386   Male\n4 175.4974   Male\n5 190.5699 Female\n6 198.4649   Male\n```\n:::\n\n```{.r .cell-code}\nboxplot(dat$height~dat$sex)\n```\n\n::: {.cell-output-display}\n![](datatabletidyverse_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\n# The base R way to get summary statistics\n\nThe `aggregate` function can be used to calculate a single statistic over groups as follows:\n\n\n::: {.cell}\n\n```{.r .cell-code}\naggregate( height ~ sex , FUN=mean, data=dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     sex   height\n1 Female 179.3636\n2   Male 189.0895\n```\n:::\n:::\n\n\nAlternatively we could use `tapply`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntapply( dat$height, dat$sex , FUN=mean )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Female     Male \n179.3636 189.0895 \n```\n:::\n:::\n\n\nWhile this works in this simple case it is difficult to get a more complicated table.  For example, there is no obvious way to get a table of means, standard deviations and counts (the standard table 1 in any biomedical paper) without using an external package.\n\nI'll illustrate three different approaches of here.  First, `data.table` and `tidyverse` add ways to manage and manipulate data\n\nIt is likely that if you spend a lot of time using R you should learn to use one or other (or both) of these systems.\n\nThen I'll illustrate `gtsummary`, a package specifically designed to make tabulation of results easier.\n\n# Using `data.table`\n\nThe `data.table` package gives us a very flexible way to perform fast grouped operations on datasets.  A `data.table` is an enhanced version of a `data.frame`, and the main function of `data.table` an extension to the `[ ]` operator (square brackets) that is much more powerful than the default R version.\n\nFirst we need to load the package, then turn the data.frame into a data.table using `setDT`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(data.table) # Load the package\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'data.table' was built under R version 4.3.3\n```\n:::\n\n```{.r .cell-code}\nsetDT(dat)          # Turn our \"data frame\" 'dat' into a \"data table\"\n```\n:::\n\n\nNow we can use the extended square bracket syntax to create our table.\n\nFirst the simple comparison of means:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat[ , mean(height), by=sex ]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      sex       V1\n   <char>    <num>\n1:   Male 189.0895\n2: Female 179.3636\n```\n:::\n:::\n\n\nNext, adding the counts and standard deviations:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat[ , .(Count=.N, Mean=mean(height),SD=sd(height)), by=sex]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      sex Count     Mean       SD\n   <char> <int>    <num>    <num>\n1:   Male    48 189.0895 9.888607\n2: Female    52 179.3636 9.519805\n```\n:::\n:::\n\n\n## Breaking down the data.table syntax\n\nThe `[` operator in data.table has three arguments.  In short, we express a command on a dataset (here called `dat`) by specifying:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat[ which rows to use , what to do , which columns to group on ]\n```\n:::\n\n\nIn the first version of the command above we left the first entry blank (so used all the rows), placed `mean(height)` in the second position and specified `by=sex` in the third. In the second version we expanded the second argument to return a list of elements, and gave them new names.\n\nFor more details of using data.table, see: https://cran.r-project.org/web/packages/data.table/vignettes/datatable-intro.html\n\n\n# The `tidyverse` way\n\n`tidyverse` is a set of `R` packages that provide many functions for data manipulation and programming.  In particular the `dplyr` library includes functions for data manipulation and summarisation.  To use these we can load the `dplyr` library:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:data.table':\n\n    between, first, last\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n:::\n\n\nThen get our results table the `tidyverse` way:\n\nFirst just the means\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat %>% group_by(sex) %>% summarise(mean(height))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 2\n  sex    `mean(height)`\n  <chr>           <dbl>\n1 Female           179.\n2 Male             189.\n```\n:::\n:::\n\n\nNow with the counts and standard deviations:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat %>% group_by(sex) %>% summarise(N=n(),mean(height), sd(height))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 4\n  sex        N `mean(height)` `sd(height)`\n  <chr>  <int>          <dbl>        <dbl>\n1 Female    52           179.         9.52\n2 Male      48           189.         9.89\n```\n:::\n:::\n\n\n## The tidyverse (dplyr) syntax\n\n`dplyr` introduces six main functions for manipulating and summarising data, these are `mutate`, `arrange`, `select`, `filter`, `summarise`, and `group_by`.  Using combinations of these functions you can perform most simple data operations.  Functions are chained together using the pipe operator `%>%` which passes the output from one into the next.  \n\nSo the first command above reads something like:  \"take dat, then group it by sex, then for each group return the summary statistics we specified\".   \n\nVisit https://www.tidyverse.org/learn for more.\n\n# Using `gtsummary`\n\nFinally to illustrate a package meant specifically for nicely formatted data tabulations, the `tbl_summary` function from the `gtsummary` package can create tables of descriptives.  `gtsummary` is built on the `gt` package, a part of the tidyverse which provides visual formatting for tables, analogous to `ggplot2` for graphs.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gtsummary)\ntbl_summary(dat, by=sex, statistic=list(height~\"{mean} ({sd})\"))\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"kutuplgrsx\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#kutuplgrsx table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#kutuplgrsx thead, #kutuplgrsx tbody, #kutuplgrsx tfoot, #kutuplgrsx tr, #kutuplgrsx td, #kutuplgrsx th {\n  border-style: none;\n}\n\n#kutuplgrsx p {\n  margin: 0;\n  padding: 0;\n}\n\n#kutuplgrsx .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#kutuplgrsx .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#kutuplgrsx .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#kutuplgrsx .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#kutuplgrsx .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#kutuplgrsx .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#kutuplgrsx .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#kutuplgrsx .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#kutuplgrsx .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#kutuplgrsx .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#kutuplgrsx .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#kutuplgrsx .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#kutuplgrsx .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#kutuplgrsx .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#kutuplgrsx .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#kutuplgrsx .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#kutuplgrsx .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#kutuplgrsx .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#kutuplgrsx .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#kutuplgrsx .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#kutuplgrsx .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#kutuplgrsx .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#kutuplgrsx .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#kutuplgrsx .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#kutuplgrsx .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#kutuplgrsx .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#kutuplgrsx .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#kutuplgrsx .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#kutuplgrsx .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#kutuplgrsx .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#kutuplgrsx .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#kutuplgrsx .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#kutuplgrsx .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#kutuplgrsx .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#kutuplgrsx .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#kutuplgrsx .gt_left {\n  text-align: left;\n}\n\n#kutuplgrsx .gt_center {\n  text-align: center;\n}\n\n#kutuplgrsx .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#kutuplgrsx .gt_font_normal {\n  font-weight: normal;\n}\n\n#kutuplgrsx .gt_font_bold {\n  font-weight: bold;\n}\n\n#kutuplgrsx .gt_font_italic {\n  font-style: italic;\n}\n\n#kutuplgrsx .gt_super {\n  font-size: 65%;\n}\n\n#kutuplgrsx .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#kutuplgrsx .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#kutuplgrsx .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#kutuplgrsx .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#kutuplgrsx .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#kutuplgrsx .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#kutuplgrsx .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Characteristic&lt;/strong&gt;\"><strong>Characteristic</strong></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Female&lt;/strong&gt;, N = 52&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>Female</strong>, N = 52<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Male&lt;/strong&gt;, N = 48&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>Male</strong>, N = 48<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">height</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">179 (10)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">189 (10)</td></tr>\n  </tbody>\n  \n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"3\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span> Mean (SD)</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n:::\n:::\n\n\nThis is a little different to the other approaches, because it produces a publication ready output rather than a dataset for further processing as do \n\nhttps://www.rdocumentation.org/packages/gtsummary/versions/1.6.3\n\n# Which to use?\n\n`data.table` and `tidyverse` perform a lot of the same tasks in improving the `R` experience.  You will probably choose to mainly use one or the other (or to mostly stick with base R), but it will help to be familiar with both if you want to understand and reuse code written by others.   \n\nIf you search `tidyverse` vs `data.table` online you will find a lot of differing opinions as to which to use.  More people learn `tidyverse` now, possibly because it has a lot of resources put into its development and promotion.  \n\nPersonally I like the `data.table` syntax better so I tend to use this, borrowing from `tidyverse` packages when I need to.  I find that the more confident I get with it, the more `data.table` features I use, which I think improves my code.\n\nThe `gt` system for making nice tables is popular with people making reports and is well integrated into the `tidyverse` ecosystem.\n\n# Further reading\n\nThis website https://wetlandscapes.com/blog/a-comparison-of-r-dialects/ shows the syntax for `data.table`, `tidyverse` and 'base' `R` to perfrom lots of different data processing operations.\n\n\n",
    "supporting": [
      "datatabletidyverse_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}